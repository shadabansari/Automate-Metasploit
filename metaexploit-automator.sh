#!/bin/bash

# Check if required tools are installed
command -v msfconsole >/dev/null 2>&1 || { echo >&2 "Metasploit Framework is required but not installed. Aborting."; exit 1; }
command -v scrot >/dev/null 2>&1 || { echo >&2 "scrot is required but not installed. Aborting."; exit 1; }

# Define modules with friendly names
declare -A modules
modules=(
  [1]="auxiliary/scanner/ftp/anonymous"
  [2]="auxiliary/scanner/rdp/cve_2019_0708_bluekeep"
  [3]="auxiliary/scanner/ssl/openssl_heartbleed"
  [4]="auxiliary/scanner/smb/smb_ms17_010"
  [5]="exploit/multi/http/simple_backdoors_exec"
  [6]="auxiliary/scanner/mysql/mysql_authbypass_hashdump"
  [7]="auxiliary/scanner/msmq/cve_2023_21554_queuejumper"
  [8]="auxiliary/scanner/smtp/smtp_relay"
)

echo "Select the exploit module to run:"
for i in {1..8}; do
  echo "  $i) ${modules[$i]}"
done

read -p "Enter your choice (1-8): " choice
selected_module="${modules[$choice]}"

if [ -z "$selected_module" ]; then
  echo "Invalid choice. Exiting."
  exit 1
fi

# Sanitize module name for directory naming
module_name=$(basename "$selected_module")
output_dir="${module_name}_results"
mkdir -p "$output_dir/screenshots"
mkdir -p "$output_dir/logs"

# Read from ip_addresses.txt
while IFS= read -r ip; do
  echo "Running $selected_module on $ip"
  clear

  # Create Metasploit script including `options`
  cat <<EOF > msf_script.rc
use $selected_module
set VERBOSE true
set RHOSTS $ip
options
run
exit
EOF

  # Run Metasploit and save output without ANSI escape characters
  output_file="$output_dir/logs/$ip.txt"
  msfconsole -q -r msf_script.rc 2>/dev/null | sed 's/\x1b\[[0-9;]*m//g' > "$output_file"

  # Display output on terminal
  cat "$output_file"

  # Take screenshot of the terminal window
  scrot -u -d 1 -q 100 "$output_dir/screenshots/$ip.png"

  # Clean up
  rm -f msf_script.rc

  # Wait before next scan
  sleep 5

done < ip_addresses.txt

echo -e "\nâœ… Completed scan. Results saved in '$output_dir/'"
